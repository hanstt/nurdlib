# nurdlib, NUstar ReaDout LIBrary
#
# Copyright (C) 2017-2019, 2023-2025
# Bastian Löher
# Håkan T Johansson
# Oliver Papst
# Hans Toshihide Törnqvist
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301  USA

auto_pedestals = false
# index 0: ADC resolution -> 0: 16 bit ... 4: 12 bit
# index 1: TDC resolution -> 0: 24 ps  ... 5: 781 ps
resolution = (0, 0)
blt_mode = noblt

# Pulser settings.
#  Activate the internal pulser.
pulser_enabled = false
#  Amplitude ranges from 0 to 0xfff (corresponds to 30% of range).
pulser_amplitude = 400

# true = first single hit in window.
# false = all hits in window.
only_first_hit = false

# Monitor settings (outputs NIM2 and NIM3).
monitor_on = false
#  Select monitor channel [0..15].
monitor_channel = 0
#  Select monitor waveform
#  0 = preamp + trigger out
#  1 = energy shaped signal + timing filter signal
#  2 = energy shaped signal x 32 + reconstructed baseline
#  3 = baseline restored signal + timing filter signal
monitor_wave = 0

# External clock for soft timestamping of events?
# Note that you must set NIM and ECL inputs accordingly,
# i.e. one Sync in, and likely also one Reset in!
clock_input = false

# NIM input options.
#  NIM 0: off, cbus, busy, data_threshold, event_threshold.
#  NIM 1: on.
#  NIM 2: off, trig1, reset.
#  NIM 3: off, sync (also set reset in NIM 2!).
#  NIM 4: off, trig0.
nim = (busy, on, off, off, trig0)
# ECL input options.
#  ECL 0: off, busy, data_threshold, event_threshold.
#  ECL 1: off, reset.
#  ECL 2: off, sync, trig1.
#  ECL 3: off, trig0.
ecl = (busy, off, off, off)
# ECL termination.
#  ECL 0: off.
#  ECL 1: off, on.
#  ECL 2: off, on.
#  ECL 3: off, on.
use_termination = (off, off, off, off)

# Window ranges:
#  time_after_trigger: [-25.56 us .. +25.56 us].
#  width: [0 .. 25.56 us].
GATE {
	time_after_trigger = -500ns
	width = 1us
}

# Channel independent settings.
#  Thresholds in the range 0..65535.
threshold = (0 {16})
#  Pole-zero should be set to signal decay time in the range [0.8..800] us,
#  and 0 = infinite.
pole_zero = (60 us {16})

# Pairwise settings (apply same value to channel pairs (0,1), (2,3) ...).
#  Timing filter integration/differentiation time in the range
#  [15 ns .. 1.58 us]. For NIM signals as input, put this to 15 ns.
differentiation = (250 ns {8})
#  Gain is in units of 0.01 from 0 to 25000, i.e. 1.00 to 250.00.
gain = (2000 {8})
#  Shaping time (FWHM) in the range [50 ns .. 25 us].
shaping_time = (2000 ns {8})
#  Base line restoration mode.
#  0 = off, 1 = strict (4 shaping times), 2 = soft (8 shaping times).
blr = (2 {8})
#  Signal rise-time in the range [15 ns .. 1.58 us].
#  Only needed when rise-time is variable, set to max possible rise-time.
signal_risetime = (0 ns {8})

# Trigger settings.
#  Trigger which creates the output trigger (TO).
#  -1 = disabled,
#  0..15 = trigger on that ch,
#  16 = trigger on any ch.
trigger_output = -1
#  Trigger on external trigger?
#  -1 = no,
#  0..15 = trigger on that ch,
#  16 = trigger on any of ch's 1..16,
#  17 = T0,
#  18 = T1.
trigger_input = 0
#  Trigger on input channel.
#  () = disabled, otherwise takes OR of all listed channels.
trigger_channel = ()

# Sleep between pair settings.
init_sleep = 20 us
