# nurdlib, NUstar ReaDout LIBrary
#
# Copyright (C) 2024-2025
# Håkan T Johansson
# Hans Toshihide Törnqvist
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301  USA

auto_pedestals = false
# ADC resolution -> 0: 16 bit ... 4: 12 bit
resolution = 0
blt_mode = noblt
# Write all data by default.
output_format = 3

# Pulser settings.
#  Activate the internal pulser.
pulser_enabled = false
#  Amplitude ranges from 0 to 0xfff (corresponds to 30% of range).
pulser_amplitude = 400

# true = first single hit in window.
# false = all hits in window.
only_first_hit = false

# Monitor settings (outputs NIM2 and NIM3).
monitor_on = false
#  Select monitor channel [0..15].
monitor_channel = 0
#  Select monitor waveform
#  0 = preamp
#  1 = energy shaped signal + timing filter signal
#  2 = energy shaped signal x 32 + reconstructed baseline
#  3 = baseline restored signal + timing filter signal
monitor_wave = 0

# External clock for soft timestamping of events?
# Note that you must set NIM and ECL inputs accordingly!
clock_input = false

# NIM input options.
#  NIM 0: off, cbus, busy, data_threshold, event_threshold.
#  NIM 1: on. Always trig-out.
#  NIM 2: off, trig1, reset.
#  NIM 3: off, sync (also set reset in NIM 2!).
#  NIM 4: off, trig0.
nim = (busy, on, off, off, trig0)
# ECL input options.
#  ECL 0: off, busy, data_threshold, event_threshold.
#  ECL 1: off, reset.
#  ECL 2: off, sync, trig1.
#  ECL 3: off, trig0.
ecl = (busy, off, off, off)
# ECL termination.
#  ECL 0: off.
#  ECL 1: off, on.
#  ECL 2: off, on.
#  ECL 3: off, on.
use_termination = (off, off, off, off)

# Window ranges:
#  time_after_trigger: [-25.56 us .. +25.56 us].
#  width: [0 .. 25.56 us].
GATE {
	time_after_trigger = -500ns
	width = 1us
}

# Channel independent settings.
#  Thresholds in the range 0..65535.
threshold = (0xff {32})

# Quad-wise settings (apply same value groups of 4 channels
#  (0,1,2,3), (4,5,6,7), ...).
#  Width of input pulse (FWHM) in range [0 ns .. 1023 ns]
signal_width = (16 ns {8})
#  Amplitude of input pulse in range [0 V .. 65.535 V]
amplitude = (1.024 V {8})
#  Range of jumper in range [0 V .. 65.535 V]
#  This corresponds to the value printed on the jumper.
jumper_range = (3.072 V {8})
#  QDC Jumper, 0..7 = all jumpers are QDC-type.
qdc_jumper = ()
#  Integration time for full charge of input pulse: [25.0 ns .. 6.325 us]
integration_long = (200.0 ns {8})
#  Integration time for first part of input pulse: [12.5 ns .. 1.5875 us]
integration_short = (25.0 ns {8})
#  Correction of internal gains for different processing stages.
#  Gain can be scaled by 0.25, 1.0 or 4.0.
correction_long_gain = (1.0 {8})
correction_short_gain = (1.0 {8})

# Trigger settings.
#  Trigger which creates the output trigger (TO).
#  -1 = disabled,
#  0..31 = trigger on that ch,
#  32 = trigger on any of ch's 1..16,
#  33 = trigger on any of ch's 16..32,
#  34 = trigger on any of ch's 1..32.
trigger_output = -1
#  Trigger on external trigger?
#  -1 = no,
#  0..31 = trigger on that ch,
#  32 = trigger on any of ch's 1..16,
#  33 = trigger on any of ch's 16..32,
#  34 = trigger on any of ch's 1..32,
#  35 = T0,
#  36 = T1.
trigger_input = -1

# Sleep between pair settings.
init_sleep = 5 ms
